"""В племени «Тумба-Юмба» есть N точек для охоты, некоторые из которых
соединены тропами. Вождь племени решил провести инвентаризацию троп.
Но, он не силен в математике, поэтому он просит вас сосчитать количество дорог.
Требуется написать программу, помогающую сосчитать количество дорог по заданной
матрице связности точек.
Входные данные:
в первой строке подаётся целое число N (0 ≤ N ≤ 100);
в следующих N строках записано по N чисел, каждое из которых является единичкой
или ноликом. Причем, если в позиции (i, j) квадратной матрицы стоит единичка,
то i-ый и j-ый точки охоты соединены тропами, а если нолик, то не соединены.
Выходные данные:
на экран необходимо вывести число, определяющее количество троп.
Пример - если входной поток такой:
5
0 1 0 0 0
1 0 1 1 0
0 1 0 0 0
0 1 0 0 0
0 0 0 0 0
то правильный ответ = 3."""


def roads(A, N):
    roads_count = 0

    for i in range(N):
        for j in range(i + 1, N):
            roads_count += A[i][j]

    print(roads_count)


if __name__ == '__main__':
    # N = int(input())
    # matrix = []
    # for _ in range(N):
    #     matrix.append(list(map(int, input().split())))
    N = 5
    matrix = [
        [0, 1, 0, 0, 0],
        [1, 0, 1, 1, 0],
        [0, 1, 0, 0, 0],
        [0, 1, 0, 0, 0],
        [0, 0, 0, 0, 0]
    ]
    roads(matrix, N)
